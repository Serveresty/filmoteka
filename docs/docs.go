// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/actors": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint for getting actors",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "GetActors",
                "responses": {
                    "200": {
                        "description": "JSON с актёрами",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ActorToFilm"
                            }
                        }
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/delete-actor": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint for delete actor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "DeleteActor",
                "parameters": [
                    {
                        "description": "Данные фильма (используется только 'id')",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ничего"
                    },
                    "206": {
                        "description": "JSON с ошибками(если такие имеются)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/delete-film": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint for delete film",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "films"
                ],
                "summary": "DeleteFilm",
                "parameters": [
                    {
                        "description": "Данные фильма (используется 'id')",
                        "name": "film",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Film"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ничего"
                    },
                    "206": {
                        "description": "JSON с ошибками(если такие имеются)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/edit-actor": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint for edit actor's info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "EditInfoActor",
                "parameters": [
                    {
                        "description": "Данные фильма (используются все поля, кроме 'id')",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ничего"
                    },
                    "206": {
                        "description": "JSON с ошибками(если такие имеются)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/edit-film": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint for edit film's info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "films"
                ],
                "summary": "EditInfoFilm",
                "parameters": [
                    {
                        "description": "Данные фильма (используются все поля, кроме 'id')",
                        "name": "film",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Film"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ничего"
                    },
                    "206": {
                        "description": "JSON с ошибками(если такие имеются)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/films": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint for getting films",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "films"
                ],
                "summary": "GetFilms",
                "responses": {
                    "200": {
                        "description": "JSON с фильмами",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FilmToActor"
                            }
                        }
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/films/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint for getting films by filter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "films"
                ],
                "summary": "GetFilmsByFilter",
                "responses": {
                    "200": {
                        "description": "JSON с фильмами",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FilmToActor"
                            }
                        }
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "This endpoint for login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Данные пользователя для аутентификации (используются только поля email и password)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON с токеном",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint for Logout",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "JSON с сообщением",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/new-actor": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint for adding new actor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "AddNewActor",
                "parameters": [
                    {
                        "description": "Данные фильма (используются все поля, кроме 'id')",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ничего"
                    },
                    "206": {
                        "description": "JSON с ошибками(если такие имеются)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/new-film": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint for adding new film",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "films"
                ],
                "summary": "AddNewFilm",
                "parameters": [
                    {
                        "description": "Данные фильма (используются все поля, кроме 'id')",
                        "name": "film",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Film"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ничего"
                    },
                    "206": {
                        "description": "JSON с ошибками(если такие имеются)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ErrorInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/registration": {
            "post": {
                "description": "This endpoint for registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registration",
                "parameters": [
                    {
                        "description": "Данные пользователя для регистрации (используются все поля, кроме 'id')",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sign-in": {
            "get": {
                "description": "This endpoint for sign-in page",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignIn Page",
                "responses": {
                    "200": {
                        "description": "Ничего"
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sign-up": {
            "get": {
                "description": "This endpoint for sign-up page",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignUp Page",
                "responses": {
                    "200": {
                        "description": "Ничего"
                    },
                    "403": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ничего"
                    },
                    "405": {
                        "description": "Ничего"
                    },
                    "500": {
                        "description": "JSON с ошибками, либо строка(в зависимости от возвращающего метода)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Actor": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ActorToFilm": {
            "type": "object",
            "properties": {
                "actors": {
                    "$ref": "#/definitions/models.Actor"
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Film"
                    }
                }
            }
        },
        "models.ErrorInfo": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Film": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rate": {
                    "type": "number"
                },
                "release_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.FilmToActor": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Actor"
                    }
                },
                "movies": {
                    "$ref": "#/definitions/models.Film"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Filmoteka API",
	Description:      "This is the filmoteka API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
